# -*- coding: utf-8 -*-
"""WillianMachado_Trab2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qPmoh1VYD4olpeOXODUnioCFBGntcGMN
"""

import numpy as np
import matplotlib.pyplot as plt

# Define as cidades
cidades = np.array([
    [1, 2],  # Cidade 0
    [3, 4],  # Cidade 1
    [5, 6],  # Cidade 2
    [2, 5],  # Cidade 3
    [7, 4],  # Cidade 4
    [8, 2],  # Cidade 5
])

# Função para calcular a distância entre duas cidades
def distancia(cidade1, cidade2):
    return np.linalg.norm(cidade1 - cidade2)

# Algoritmo de vizinho mais próximo (KNN)
def vizinho_mais_proximo(cidades, cidade_inicial):
    rota = [cidade_inicial]
    cidades_visitadas = set([cidade_inicial])
    while len(cidades_visitadas) < len(cidades):
        cidade_atual = rota[-1]
        cidade_proxima = None
        distancia_minima = float('inf')
        for i, cidade in enumerate(cidades):
            if i not in cidades_visitadas:
                dist = distancia(cidade_atual, cidade)
                if dist < distancia_minima:
                    distancia_minima = dist
                    cidade_proxima = i
        rota.append(cidade_proxima)
        cidades_visitadas.add(cidade_proxima)
    return rota

# Encontra a rota mais curta
rota = vizinho_mais_proximo(cidades, 0)

# Plota a rota
plt.figure(figsize=(8, 8))
plt.scatter(cidades[:, 0], cidades[:, 1])
for i in range(len(rota) - 1):
    plt.plot([cidades[rota[i], 0], cidades[rota[i + 1], 0]], [cidades[rota[i], 1], cidades[rota[i + 1], 1]], 'k-')
plt.plot([cidades[rota[-1], 0], cidades[rota[0], 0]], [cidades[rota[-1], 1], cidades[rota[0], 1]], 'k-')
plt.show()