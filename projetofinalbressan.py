# -*- coding: utf-8 -*-
"""ProjetoFinalBressan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qNvYgls0jjh7xHVcFjyrLK9U7LqCEyeu
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_csv('dataset.csv')
df.head()
#fazer a classificação  de credito de acordo com o arquivo usando decision tree

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

df = pd.read_csv('dataset.csv')
df.head()
df = df.dropna()

x = df.drop(['ID','Y'], axis=1)
y = df['Y']

x.head()

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)

#treinamento do modelo que pode ser alterado.
#n estimators é o numero de arvores no classificador
random_forest = RandomForestClassifier(n_estimators=50, random_state=42)
random_forest.fit(x_train, y_train)

#aplicação do modelo treinado
random_forest_pred = random_forest.predict(x_test)

# resultado da acuracia apos aplicação da alteração
random_forest_accuracy = accuracy_score(y_test, random_forest_pred)
print("Acurácia do Modelo Random Forest:", random_forest_accuracy)

cm = confusion_matrix(y_test, random_forest_pred)
plt = sns.heatmap(cm, annot=True, fmt='d')